{
  "name": "@tuckn/WshOS",
  "description": "Adds some useful functions that handles Windows OS into WSH (Windows Script Host).",
  "version": "5.0.0",
  "author": "Tuckn <tuckn333@gmail.com>",
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/tuckn"
  },
  "private": false,
  "license": "MIT",
  "homepage": "https://docs.tuckn.net/WshOS",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tuckn/WshOS.git"
  },
  "bugs": {
    "url": "https://github.com/tuckn/WshOS/issues"
  },
  "keywords": [
    "Windows",
    "WSH",
    "WSF",
    "JScript",
    "VBScript",
    "module"
  ],
  "files": [
    "dist"
  ],
  "main": "./dist/bundle.js",
  "bin": {},
  "scripts": {
    "install:WshJest": "git submodule add https://github.com/tuckn/WshJest.git ./WshModules/WshJest",
    "install:WshPath": "git submodule add https://github.com/tuckn/WshPath.git ./WshModules/WshPath",
    "installModules": "run-s install:*",
    "updateModules": "git submodule update --remote",
    "ncu:checkUpdate": "npx npm-check-updates",
    "ncu:upgrade": "npx npm-check-updates --upgrade && npm install && npm audit fix",
    "fix:eslint": "npm run lint:eslint -- --fix",
    "fix:prettier": "npm run lint:prettier -- --write",
    "fix": "run-p fix:*",
    "lint:eslint": "eslint --ext js,ts .",
    "lint:prettier": "prettier -l \"**/*.{json,md,yml,yaml}\"",
    "lint:type": "tsc --noEmit",
    "lint": "run-p lint:*",
    "test:WMI:execQuery": ".\\scripts\\Test WMI -t execQuery$",
    "test:WMI:toJsObject": ".\\scripts\\Test WMI -t toJsObject$",
    "test:WMI:toJsObjects": ".\\scripts\\Test WMI -t toJsObjects$",
    "test:WMI:getProcess": ".\\scripts\\Test WMI -t getProcess$",
    "test:WMI:getWithSWbemPath": ".\\scripts\\Test WMI -t getWithSWbemPath$",
    "test:WMI:getWindowsUserAccounts": ".\\scripts\\Test WMI -t getWindowsUserAccounts$",
    "test:WMI:getThisProcess": ".\\scripts\\Test WMI -t getThisProcess$",
    "test:WMI": ".\\scripts\\Test WMI",
    "test:System:Values": ".\\scripts\\Test System -t Values$",
    "test:System:sysInfo": ".\\scripts\\Test System -t sysInfo$",
    "test:System:SystemStatus": ".\\scripts\\Test System -t SystemStatus$",
    "test:System:writeLogEvent": ".\\scripts\\Test System -t writeLogEvent$",
    "test:System:setStrToClipboardAO": ".\\scripts\\Test System -t setStrToClipboardAO$",
    "test:System:getStrFromClipboard": ".\\scripts\\Test System -t getStrFromClipboard$",
    "test:System": ".\\scripts\\Test System",
    "test:Exec:surroundCmdArg": ".\\scripts\\Test Exec -t surroundCmdArg$",
    "test:Exec:escapeForCmd": ".\\scripts\\Test Exec -t escapeForCmd$",
    "test:Exec:joinCmdArgs": ".\\scripts\\Test Exec -t joinCmdArgs$",
    "test:Exec:convToCmdlineStr": ".\\scripts\\Test Exec -t convToCmdlineStr$",
    "test:Exec:dryRun": ".\\scripts\\Test Exec -t dryRun$",
    "test:Exec:exec": ".\\scripts\\Test Exec -t \"^^exec, \"",
    "test:Exec:execSync": ".\\scripts\\Test Exec -t \"^^execSync, \"",
    "test:Exec:run": ".\\scripts\\Test Exec -t \"^^run, \"",
    "test:Exec:runSync": ".\\scripts\\Test Exec -t \"^^runSync, \"",
    "test:Exec:runAsAdmin": ".\\scripts\\Test Exec -t \"^^runAsAdmin, \"",
    "test:Exec": ".\\scripts\\Test Exec",
    "test:Handler:getProcessIDs": ".\\scripts\\Test Handler -t getProcessIDs$",
    "test:Handler:getProcessObjs": ".\\scripts\\Test Handler -t getProcessObjs$",
    "test:Handler:getProcessObj": ".\\scripts\\Test Handler -t getProcessObj$",
    "test:Handler:DriveController": ".\\scripts\\Test Handler -t \"^^DriveController\"",
    "test:Handler:terminateProcesses": ".\\scripts\\Test Handler -t terminateProcesses$",
    "test:Handler:getThisProcessID": ".\\scripts\\Test Handler -t getThisProcessID$",
    "test:Handler:getThisParentProcessID": ".\\scripts\\Test Handler -t getThisParentProcessID$",
    "test:Handler:UserController": ".\\scripts\\Test Handler -t \"^^UserController\"",
    "test:Handler": ".\\scripts\\Test Handler",
    "test:TaskScheduler:check_SchTask_commands": ".\\scripts\\Test TaskScheduler -t check_SchTask_commands$",
    "test:TaskScheduler:check_fromCreatingToRemoving": ".\\scripts\\Test TaskScheduler -t check_fromCreatingToRemoving$",
    "test:TaskScheduler:check_fromCreatingToRemoving_Admin": ".\\scripts\\Test TaskScheduler -t check_fromCreatingToRemoving_Admin$",
    "test:TaskScheduler": ".\\scripts\\Test TaskScheduler",
    "test:OS": "run-s test:WMI test:System test:Exec test:Handler test:TaskScheduler",
    "build": "wsh-packager bundle ./Package.wsf",
    "test:dist:module": ".\\scripts\\Test dist:module",
    "test:dist:bundle": ".\\scripts\\Test dist:bundle",
    "test": "run-s test:dist:*",
    "predocs": "rimraf ./docs",
    "docs:common": "jsdoc --configure ./jsdoc.json",
    "cp-docs-css": "cpy --flat ./assets/styles/jsdoc.css ./docs/styles/",
    "cp-docs-img": "cpy ./assets/img/**/* ./docs/img/",
    "postdocs": "run-p cp-docs-*",
    "docs": "run-s docs:*",
    "up-build-doc": "run-s updateModules build docs"
  },
  "husky": {
    "hooks": {
      "pre-commit": "echo @FIXME \"npx lint-staged\" fixes all .js!"
    }
  },
  "lint-staged": {
    "*.{js}": "eslint --fix",
    "*.{json,css,md,yml,yaml}": "prettier --write"
  },
  "dependencies": {},
  "devDependencies": {
    "@tuckn/insert-gtag": "^1.1.1",
    "@tuckn/wsh-packager": "^1.0.1",
    "@types/activex-scripting": "^1.0.8",
    "@types/windows-script-host": "^5.8.3",
    "cpy-cli": "^4.1.0",
    "docdash": "^1.2.0",
    "eslint": "8.20.0",
    "eslint-config-prettier": "8.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jsdoc": "^39.3.3",
    "eslint-plugin-prettier": "4.2.1",
    "husky": "8.0.1",
    "jsdoc": "^3.6.10",
    "npm-run-all": "^4.1.5",
    "prettier": "2.7.1",
    "rimraf": "^3.0.2"
  }
}
